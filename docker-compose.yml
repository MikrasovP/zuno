version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-zuno}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-zuno}
      JWT_SECRET: ${JWT_SECRET:-zuno_jwt_secret_2025}
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
    ports:
      - "3000:3000"
    command: sh -c "npx prisma generate && npx prisma migrate deploy && npm run start"
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runner
    depends_on:
      - backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:3000}
    ports:
      - "4173:4173"
    restart: unless-stopped

volumes:
  db_data:
